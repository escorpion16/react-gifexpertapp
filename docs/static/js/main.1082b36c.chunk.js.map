{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","trim","length","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAkB9C,OAEI,sBAAMC,SAbW,SAACC,GAEdH,EAAWI,OAAOC,OAAS,IAC3BF,EAAEG,iBAEFR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACQO,KAAK,OACLC,MAAQT,EACRU,SArBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCNnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCCPO,EAAc,SAAC,GAAkB,IAAjBb,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAE9B,OAEI,sBAAKI,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAU,WACNxB,EAASC,GACRwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAER,CAAEpB,IAGEqB,EDlBwBM,CAAa3B,GAA/Ba,EAFwB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAOpB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAA0DhB,EAA1D,OACEoB,GAAW,aACb,qBAAKJ,UAAU,gBAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAAgCA,GAAbA,EAAIC,aEShCiB,EAzBM,WAAO,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCZlC8B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1082b36c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            e.preventDefault();\r\n        \r\n            setCategories( cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n       \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                    type=\"text\"\r\n                    value={ inputValue }\r\n                    onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n            \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category ) }&limit=10&api_key=fqqT9UJBzZPQisBvYGA1BzEXni5Yi3ux`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({url, title}) => {\r\n\r\n    return (\r\n        \r\n        <div className='card animate__animated animate__fadeInLeft'>\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n       \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data: images,loading} = useFetchGifs(category);\r\n    \r\n    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( imgs => setImages(imgs))\r\n    // }, [category])\r\n\r\n    return (\r\n        <>\r\n            <h3 className='card animate__animated animate__fadeIn'> { category } </h3>\r\n            { loading && 'Loading...' }\r\n            <div className=\"wrapperCards \">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem key={ img.id } {...img} />\r\n                    ))\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n        .then(imgs => {\r\n\r\n            setTimeout(() => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }, 1000);\r\n        })    \r\n    }, [ category ])\r\n\r\n    \r\n    return state; //{ data: [], loading:true}\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                        \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}